import { BLOCK_SIZE } from "./constants";
import { RawSha256 } from "./RawSha256";
import { Hash, SourceData } from "@aws-sdk/types";
import { isEmptyData, convertToBuffer } from "@aws-crypto/util";

export class Sha256 implements Hash {
  private readonly hash = new RawSha256();
  private readonly outer?: RawSha256;
  private error: any;

  constructor(secret?: SourceData) {
    if (secret) {
      this.outer = new RawSha256();
      const inner = bufferFromSecret(secret);
      const outer = new Uint8Array(BLOCK_SIZE);
      outer.set(inner);

      for (let i = 0; i < BLOCK_SIZE; i++) {
        inner[i] ^= 0x36;
        outer[i] ^= 0x5c;
      }

      this.hash.update(